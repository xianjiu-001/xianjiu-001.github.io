<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一分钱两Q币</title>
      <link href="posts/9582.html"/>
      <url>posts/9582.html</url>
      
        <content type="html"><![CDATA[<p><strong>苹果用户薅Q币羊毛，并不能充值到王者荣耀里</strong></p><p>手机某宝界面左上方有<strong>签到</strong>字样</p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511194530.png" alt="签到"></p><p>签到完后会让你继续浏览浏览30秒。</p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511194650.png" alt="等待"></p><p>30秒过后红包金额会变为2.88左右，第一次领取签到红包可能会比较大。</p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511194947.png" alt="结果"></p><p>在首页搜索框中输入下面的网址</p><pre class="line-numbers language-html"><code class="language-html">http://item.taobao.com/item.htm?id=644066463907&amp;fpChannel=9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511195257.png" alt="可使用"></p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511195414.png" alt="哈哈"></p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210511195627.png" alt="完美"></p><p>就白嫖了两个Q币每天都可嫖。</p>]]></content>
      
      
      <categories>
          
          <category> 薅羊毛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 某宝 </tag>
            
            <tag> 活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站天选直播抽奖</title>
      <link href="posts/313f.html"/>
      <url>posts/313f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-项目须知"><a href="#1-项目须知" class="headerlink" title="1.项目须知"></a>1.项目须知</h2><h3 id="既然是薅羊毛项目，当然要谈一谈收益几何？"><a href="#既然是薅羊毛项目，当然要谈一谈收益几何？" class="headerlink" title="既然是薅羊毛项目，当然要谈一谈收益几何？"></a>既然是薅羊毛项目，当然要谈一谈收益几何？</h3><p>根据我将近一个星期的测试，这个单号中奖概率在1天<em>1~3</em>次左右，价值不等。有运气好的群友可以抽到红米K40，手办，switch等等，也有的是抽到一起打游戏啊这类的没有价值的东西。反正除了欧皇以外，单号每天收益也就大约<em>1.5R</em>左右吧。</p><h3 id="谈收益不谈成本，那不是耍流氓么？"><a href="#谈收益不谈成本，那不是耍流氓么？" class="headerlink" title="谈收益不谈成本，那不是耍流氓么？"></a>谈收益不谈成本，那不是耍流氓么？</h3><p>每天都需要挂着脚本的长期运行，当然你可以中了一次之后就把天选关掉就不抽了</p><h3 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h3><p>你需要准备的核心工具是（百度网盘链接：<a href="https://pan.baidu.com/s/1BBR-vwJuMVHytxIlwh3bgQ">https://pan.baidu.com/s/1BBR-vwJuMVHytxIlwh3bgQ</a>   提取码：xjjj ）：</p><ul><li>一个可上网的可长期挂着浏览器的电脑或者其他设备</li><li>油猴插件或者暴力猴插件</li><li>天选脚本</li></ul><h2 id="2-脚本配置"><a href="#2-脚本配置" class="headerlink" title="2.脚本配置"></a>2.脚本配置</h2><h3 id="1-安装一个可以安装插件的浏览器"><a href="#1-安装一个可以安装插件的浏览器" class="headerlink" title="1.安装一个可以安装插件的浏览器"></a>1.安装一个可以安装插件的浏览器</h3><p>电脑端：Chrome、Microsoft Edge或者Firefox</p><p>安卓手机端：Kiwi、Firefox</p><p>kiwi在工具包中有。</p><h2 id="2-安装天选抽奖JS脚本"><a href="#2-安装天选抽奖JS脚本" class="headerlink" title="2.安装天选抽奖JS脚本"></a>2.安装天选抽奖JS脚本</h2><p>安装方式分两种：</p><ul><li>大佬私链</li></ul><pre class="line-numbers language-js"><code class="language-js">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>greasyfork<span class="token punctuation">.</span>org<span class="token operator">/</span>zh<span class="token operator">-</span>CN<span class="token operator">/</span>scripts<span class="token operator">/</span><span class="token number">424074</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>手动添加脚本</li></ul><p>打开工具包中的<strong>天选抽奖.txt</strong>文件，全选（Ctrl+A）然后（Ctrl+C）。</p><p>打开浏览器中的油猴插件添加新脚本。全选（Ctrl+A）然后（Ctrl+V）再保存（Ctrl+S）。</p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210502214138.png" alt="添加脚本"></p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210502214332.png" alt="添加脚本界面"></p><h2 id="3-脚本设置"><a href="#3-脚本设置" class="headerlink" title="3.脚本设置"></a>3.脚本设置</h2><p>进入任意一个B站直播的直播间等待脚本的加载。</p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210502215821.png" alt="配置一"></p><p><img src="/medias/loading_img.gif" data-original="https://cdn.jsdelivr.net/gh/xianjiu-001/blog_img/images/20210502215934.png" alt="配置二"></p><p>至此电脑版脚本配置完毕。</p>]]></content>
      
      
      <categories>
          
          <category> 薅羊毛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 油猴 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Request初识</title>
      <link href="posts/1cb6.html"/>
      <url>posts/1cb6.html</url>
      
        <content type="html"><![CDATA[<h2 id="cookie和session基础"><a href="#cookie和session基础" class="headerlink" title="cookie和session基础"></a>cookie和session基础</h2><p>http协议是无状态协议，用户浏览服务器上的内容时，只需要发送请求，服务器返回内容。对于服务器而言，他不关心是哪个用户的请求。但是大多数网站是需要用户登陆的，为了标记用户，服务器采用了cookie机制来识别是哪一个用户的请求。</p><h2 id="cookie机制"><a href="#cookie机制" class="headerlink" title="cookie机制"></a>cookie机制</h2><p>为了实现用户标记，在Http无状态请求的基础之上，我们需要在请求中携带一些用户信息（比如用户名之类，这些信息是服务器发送到本地浏览器的，但是服务器并不存储这些信息）</p><ul><li><strong>需要注意的是：cookie信息是保存在本地浏览器里面的，服务器上并不存储相关的信息。 在发送请求时，cookie的这些内容是放在 Http协议中的header 字段中进行传输的。</strong></li><li><strong>几乎现在所有的网站都会发送一些 cookie信息过来，当用户请求中携带了cookie信息，服务器就可以知道是哪个用户的访问了，从而不需要再使用账户和密码登录。</strong></li><li><strong>cookie信息是直接放在Http协议的header中进行传输的</strong>，看得出来，这是个隐患！一旦别人获取到你的cookie信息（截获请求，或者使用你的电脑），那么他很容易从cookie中分析出你的用户名和密码。为了解决这个隐患，所以有了session机制。</li></ul><h2 id="session机制"><a href="#session机制" class="headerlink" title="session机制"></a>session机制</h2><ol><li><p>服务器根据用户名和密码，生成一个session ID，存储到服务器的数据库中。</p></li><li><p>用户登录访问时，服务器会将对应的session ID发送给用户（本地浏览器）</p></li><li><p>浏览器会将这个session ID存储到cookie中，作为一个键值项。</p></li><li><p>以后，浏览器每次请求，就会将含有session ID的cookie信息，一起发送给服务器。</p></li><li><p>服务器收到请求之后，通过cookie中的session ID，到数据库中去查询，解析出对应的用户名，就知道是哪个用户的请求了。</p></li></ol><h2 id="模拟登陆"><a href="#模拟登陆" class="headerlink" title="模拟登陆"></a>模拟登陆</h2><p>一般分析流程：</p><ol><li>分别用错的用户名和错的密码、对的用户名和错的密码以及对的用户名对的密码来登录三次。（<strong>正确登录后，页面会进行跳转，页面和请求都会被刷新，不便于找出原始的请求</strong>）</li><li>在浏览器开发者工具（打开浏览器按<strong>F12</strong>即可使用开发者工具）中<em>network</em>选项下勾选<em>preserve log</em>，保留跳转前的请求相关数据</li><li>cookie保存机制</li></ol><pre class="line-numbers language-python"><code class="language-python">​```<span class="token comment" spellcheck="true"># 环境python3、windows</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> cookiejar <span class="token keyword">import</span> cookielib<span class="token keyword">def</span> <span class="token function">demosession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
            <tag> http协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tableau</title>
      <link href="posts/4401.html"/>
      <url>posts/4401.html</url>
      
        <content type="html"><![CDATA[<h2 id="环形图制作"><a href="#环形图制作" class="headerlink" title="环形图制作"></a>环形图制作</h2><p>环形图由大小同心圆叠加，小图设置为背景色</p><ol><li>使用最小值或者最大值作为行</li><li>使用智能显示，去掉大小图中的大小设置 <h2 id="词云图（由气泡图转变为词云图）"><a href="#词云图（由气泡图转变为词云图）" class="headerlink" title="词云图（由气泡图转变为词云图）"></a>词云图（由气泡图转变为词云图）</h2>将气泡形状改为文本<h2 id="瀑布图"><a href="#瀑布图" class="headerlink" title="瀑布图"></a>瀑布图</h2></li><li>选择行列属性，行属性，先按照行属性升序排列，行属性设置为快速表计算——汇总，绘制成条形图，选择甘特条形图</li><li>创建计算字段设置为长方形高度，字段值=-[行属性字段] ，放置于大小标记</li><li>分析——行总计<h2 id="插入自定义形状"><a href="#插入自定义形状" class="headerlink" title="插入自定义形状"></a>插入自定义形状</h2>需要图片最好.png<h2 id="多维地图"><a href="#多维地图" class="headerlink" title="多维地图"></a>多维地图</h2></li><li>去掉属性分析——聚合度量<h3 id="导入自定义的地理信息"><a href="#导入自定义的地理信息" class="headerlink" title="导入自定义的地理信息"></a>导入自定义的地理信息</h3>导入文件为CSV格式<h2 id="集"><a href="#集" class="headerlink" title="集"></a>集</h2>集合并一定是由同一个维度创造出来的集<h2 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h2>按一定类别计算字段<br>{INCLUDE [字段名]: SUM([字段名])}</li></ol>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tableau </tag>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog美化时间轴</title>
      <link href="posts/9600.html"/>
      <url>posts/9600.html</url>
      
        <content type="html"><![CDATA[<h1 id="2021-4-18"><a href="#2021-4-18" class="headerlink" title="2021-4-18"></a>2021-4-18</h1><h2 id="添加自动生成类别"><a href="#添加自动生成类别" class="headerlink" title="添加自动生成类别"></a>添加自动生成类别</h2><p><a href="https://blog.eson.org/pub/e2f6e239/">原文链接</a></p><h2 id="不同终端的字体自适应"><a href="#不同终端的字体自适应" class="headerlink" title="不同终端的字体自适应"></a>不同终端的字体自适应</h2><p><a href="https://chen-shang.github.io/2019/08/15/ji-zhu-zong-jie/hexo/hexo-theme-matery-zhu-ti-you-hua/#toc-heading-6">原文链接</a></p><h2 id="趣味标题修改"><a href="#趣味标题修改" class="headerlink" title="趣味标题修改"></a>趣味标题修改</h2><p><a href="https://blog.csdn.net/weixin_44186409/article/details/105802136">原文链接</a></p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>浏览器搞笑标题<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span> <span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token keyword">var</span> titleTime<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヽ(●-`Д´-)ノ你要玩捉迷藏嘛'</span><span class="token punctuation">;</span>         <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヾ(Ő∀Ő3)ノ好哦！'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>         titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="增加科技线条"><a href="#增加科技线条" class="headerlink" title="增加科技线条"></a>增加科技线条</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>动态线条背景，添加在文件的body标签中，这一点要注意<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span>color<span class="token operator">=</span><span class="token string">"122 103 238"</span> opacity<span class="token operator">=</span><span class="token string">'0.7'</span> zIndex<span class="token operator">=</span><span class="token string">"-2"</span> count<span class="token operator">=</span><span class="token string">"200"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="看板娘位置调整"><a href="#看板娘位置调整" class="headerlink" title="看板娘位置调整"></a>看板娘位置调整</h2><p>直接在根目录下的_config.yml中将属性 position: left</p><pre class="line-numbers language-markdown"><code class="language-markdown">live2d:<span class="token code keyword">    enable: true</span><span class="token code keyword">    scriptFrom: local</span><span class="token code keyword">    pluginRootPath: live2dw/</span><span class="token code keyword">    pluginJsPath: lib/</span><span class="token code keyword">    pluginModelPath: assets/</span><span class="token code keyword">    tagMode: false</span><span class="token code keyword">    log: false</span><span class="token code keyword">    model:</span><span class="token code keyword">        use: live2d-widget-model-shizuku</span><span class="token code keyword">    display:</span><span class="token code keyword">        position: left</span><span class="token code keyword">        width: 150</span><span class="token code keyword">        height: 300</span><span class="token code keyword">    mobile:</span><span class="token code keyword">        show: true</span><span class="token code keyword">    react:</span><span class="token code keyword">        opacity: 0.7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2020-4-19"><a href="#2020-4-19" class="headerlink" title="2020-4-19"></a>2020-4-19</h1><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>picgo+github pages构建图床功能加速访问速度</p><p><a href="https://yafine-blog.cn/posts/4e9b.html">https://yafine-blog.cn/posts/4e9b.html</a></p><p><a href="https://blog.csdn.net/weixin_42560249/article/details/88795902?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&amp;dist_request_id=1331989.2823.16187485578190069&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">文章写作</a></p><p><a href="https://blog.csdn.net/qq_43827595/article/details/104324443">美化修改</a></p><p><a href="https://blog.csdn.net/gongch0604/article/details/100729421">https://blog.csdn.net/gongch0604/article/details/100729421</a></p><p><a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a></p><p><a href="http://luckyzmj.cn/posts/1d6f1579.html">http://luckyzmj.cn/posts/1d6f1579.html</a></p><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>参考来源 ：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-9">sky03大佬</a></p><h2 id="全局字体更换"><a href="#全局字体更换" class="headerlink" title="全局字体更换"></a>全局字体更换</h2><ol><li><a href="http://www.makefont.com/">造字工房</a>查找好看且使用的字体，下载下来，存放到博客根目录下的source/font文件目录下</li><li>找到主题文件夹下的代码my.css（在./themes/matery/source/css文件夹中)</li></ol><pre class="line-numbers language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myFont'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('../font/myFont.ttf')</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myFont'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考来源：<a href="https://yafine-blog.cn/posts/49fb.html">过客～励む大佬的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 时光轴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人blog </tag>
            
            <tag> Matery </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy爬虫框架</title>
      <link href="posts/b2a.html"/>
      <url>posts/b2a.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-python"><code class="language-python">pip install scrapy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>错误1：Twisted安装失败 ，手动安装Twisted</li><li>错误2：win32报警， pip install pywin32<h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2>scrapy startproject 域名+Spider<h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><h3 id="爬虫创建"><a href="#爬虫创建" class="headerlink" title="爬虫创建"></a>爬虫创建</h3></li></ul><p><strong>项目文件目录（带有.cfg文件）下进入cmd命令行并输入：</strong><br>scrapy genspider 爬虫名字（去Spider后缀） 网站域名</p><ul><li>爬虫名字不要和项目名字一样</li><li>网站域名是允许爬虫采集的域名</li><li>修改setting.py中的ROBOTSTXT属性，改为False</li><li>修改setting.py中request headers<h3 id="爬虫文件"><a href="#爬虫文件" class="headerlink" title="爬虫文件"></a>爬虫文件</h3>```<h1 id="coding：utf-8"><a href="#coding：utf-8" class="headerlink" title="-- coding：utf-8 --"></a>-<em>- coding：utf-8 -</em>-</h1>import scrapy</li></ul><p>class BaiduSpider(scrapy.Spider):<br>    name = ‘baidu’  # 爬虫名字<br>    allowed_domains = [‘baidu.com’]  # 允许采集域名<br>    start_urls = [‘<a href="http://baidu.com/']">http://baidu.com/']</a>  # 起始URL</p><pre><code>def parse(self, response):  # 解析数据，提取数据    pass</code></pre><pre><code>### 爬虫运行scrapy crawl 爬虫名字## 解析网页### 提取数据```pythonresponse.xpath(xpath语法).get()    </code></pre><ul><li>get() 返回一个值</li><li>getall() 0返回多个值</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三壶谜题</title>
      <link href="posts/fa62.html"/>
      <url>posts/fa62.html</url>
      
        <content type="html"><![CDATA[<p>有一个充满水的8品脱的水壶和两个空水壶（容积分别是5品脱和3品脱）。通过将水壶完全倒满水和将水壶的水完全倒空这两种方式，在其中的一个水壶中得到4品脱的水。</p><h1 id="一、算法思想"><a href="#一、算法思想" class="headerlink" title="一、算法思想"></a>一、算法思想</h1><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><ol><li>采用的算法思想是将某个时刻水壶中水的数量看作一个状态，用一个长度为3的数组表示。</li><li>初始状态便为[8,0,0],再拓展他的下一结点的可能结构。</li><li>若下一结点的结构已经被拓展过了便放弃，若没有拓展过则加入拓展列表（open_list）中。然后递归上述操作。</li><li>直到拓展列表（open_list）为空或者找到目标为止。</li></ol><h2 id="思想图解"><a href="#思想图解" class="headerlink" title="思想图解"></a>思想图解</h2><p>这里的第一个数就代表着是那个8品脱的瓶子，依次分别是8品脱，5品脱，3品脱<br>使用层次遍历一次一次递归扩展新的结点，知道找到4品脱的水或者无结点可扩展为止（类似于广度优先遍历）。</p><h1 id="二、代码展示"><a href="#二、代码展示" class="headerlink" title="二、代码展示"></a>二、代码展示</h1><h2 id="1-创建树节点结构"><a href="#1-创建树节点结构" class="headerlink" title="1.创建树节点结构"></a>1.创建树节点结构</h2><p>节点包括两个属性，一个属性是数组类型的，存储当前三个水壶的容量状态，另一个属性是记录它是由哪个结点扩展过来的，以便找到解决路径：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">node</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 创建树节点</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>data <span class="token operator">=</span> data  <span class="token comment" spellcheck="true"># 存储三个壶的容量状态</span>        self<span class="token punctuation">.</span>per <span class="token operator">=</span> None  <span class="token comment" spellcheck="true"># 存储上一时刻三个壶的容量状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-实现倾倒动作"><a href="#2-实现倾倒动作" class="headerlink" title="2.实现倾倒动作"></a>2.实现倾倒动作</h2><p>由于这里只有三个壶，互相倾倒的方案可以枚举出来，所有我就没使用二重嵌套循环，而是使用一层循环：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">pour</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 扩展子节点</span>    r_list <span class="token operator">=</span> n<span class="token punctuation">.</span>data  <span class="token comment" spellcheck="true"># 记录当前三个水壶的容量状态</span>    max_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 水壶的最大容量</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> r_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            n_list <span class="token operator">=</span> r_list<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 初始化下一结点的水壶状态</span>            <span class="token keyword">if</span> r_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> r_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>                n_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> r_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>max_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> r_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                n_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> max_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                n_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> r_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> r_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span>                n_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>            flag <span class="token operator">=</span> <span class="token boolean">True</span>  <span class="token comment" spellcheck="true"># 记录水壶的状态是否已经发生过（扩展过）</span>            <span class="token keyword">for</span> one <span class="token keyword">in</span> closed_list<span class="token punctuation">:</span>                <span class="token keyword">if</span> one<span class="token punctuation">.</span>data <span class="token operator">==</span> n_list<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 比较当前水壶状态和以往记录过得水壶状态</span>                    flag <span class="token operator">=</span> <span class="token boolean">False</span>            <span class="token keyword">if</span> flag<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"扩展的新节点是："</span><span class="token punctuation">,</span>n_list<span class="token punctuation">)</span>                new_node <span class="token operator">=</span> node<span class="token punctuation">(</span>n_list<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建新节点存储水壶的新状态</span>                new_node<span class="token punctuation">.</span>per <span class="token operator">=</span> n                open_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_node<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主递归函数"><a href="#主递归函数" class="headerlink" title="主递归函数"></a>主递归函数</h2><p>查看当前是否已经扩展到4品脱的水或者是否还有结点可以扩展。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">BFS_node</span><span class="token punctuation">(</span>root_1<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 递归查找子节点的扩展状态以及查验是否找到4品脱的水壶</span>    n <span class="token operator">=</span> root_1    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当前节点："</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> open_list <span class="token keyword">is</span> None<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"没有找到4品脱的水"</span>    nodelist <span class="token operator">=</span> n<span class="token punctuation">.</span>data    <span class="token keyword">if</span> <span class="token number">4</span> <span class="token keyword">in</span> nodelist<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"找到了4品脱的水"</span><span class="token punctuation">)</span>        print_node<span class="token punctuation">(</span>n<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">"找到了4品脱的水"</span>    closed_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>open_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pour<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"*******"</span><span class="token punctuation">)</span>    BFS_node<span class="token punctuation">(</span>open_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据初始化"><a href="#数据初始化" class="headerlink" title="数据初始化"></a>数据初始化</h2><p>数据初始化，以及找到4品脱水后打印路径的打印函数。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">print_node</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 打印正确的水壶操作路径</span>    <span class="token keyword">if</span> n<span class="token punctuation">.</span>per <span class="token operator">==</span> None<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    print_node<span class="token punctuation">(</span>n<span class="token punctuation">.</span>per<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 初始化数据</span>root <span class="token operator">=</span> node<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>open_list <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 存储已找到却未被扩展的子节点</span>closed_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 存储已找到且被扩展的子节点</span>BFS_node<span class="token punctuation">(</span>open_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>主要是用广度优先遍历的思想和树结构，当然如果不在意找到4品脱的水的路径，其实没必要使用树结构。另外打印函数是从最后一层依次往上回溯的，所以显示的是倒序的路径。如果需要变成正向的话，可以加一个栈来实现。这里我就不自己实现了。<br>初学者，学艺不精，如有不足，还请多多指教。</p>]]></content>
      
      
      <categories>
          
          <category> 算法小题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类 </tag>
            
            <tag> 广度优先遍历 </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
